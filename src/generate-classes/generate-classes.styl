@import '../_functions';
@import './alignment';
@import './border';
@import './color';
@import './cursor';
@import './flex';
@import './layout';
@import './margin-padding';
@import './opacity';
@import './overflow';
@import './shadow';
@import './text';
@import './transition';
@import './visibility';



/**
 * Create all classes with hyphen-case prefix made by $prefixes
 *
 * @param {string[]} $prefixes - array of string, e.g. ('rs' 'sm')
 */
_rs-generate-classes($prefixes, $options) {
  $prefix = rs-get-valid-hyphen-case-string($prefixes);

  // generate border classes
  rs-border($prefix, $options['border']);
  rs-special-border($prefix);

  // generate for box-sizing classes
  rs-box-sizing($prefix);

  // generate cursor classes
  rs-cursor($prefix);

  // generate for display classes
  rs-display($prefix);

  // generate flex classes
  rs-flex-alignment($prefix);
  rs-flex-value($prefix);
  rs-flex-additional-value($prefix);
  rs-flex-order($prefix);

  // generate text-align and vertical-align classes
  rs-text-align($prefix);
  rs-vertical-align($prefix);

  // generate margin and padding classes
  rs-special-margin-padding($prefix);
  rs-margin-padding($prefix, $options['margin-padding']);

  // generate color classes
  rs-special-color($prefix);
  rs-color($prefix, $options['color']);

  // generate transition classes
  rs-transition($prefix, $options['transition']);

  // generate opacity classes
  rs-opacity($prefix);

  // generate overflow classes
  rs-overflow($prefix);

  // generate box-shadow, text-shadow classes
  rs-box-shadow($prefix, $options['box-shadow']);
  rs-text-shadow($prefix, $options['text-shadow']);

  // generate text classes
  rs-text-decoration($prefix);
  rs-text-others($prefix);
  rs-text($prefix, $options['text']);

  // generate visibility classes
  rs-visibility($prefix);
}



/**
 * Mixin to generate common classes and media query classes
 */
rs-generate-classes($options) {
  // set option value from injected $options
  $prefix = $options['global-prefix'];
  $media-options = $options['media-query'];


  // generate common classes (no media query)
  _rs-generate-classes($prefix, $options);

  // generate media query classes, when $options['media-query'] is set
  if (typeof($media-options) == 'object') {
    for $key, $val in $media-options {
      $query = 'screen';

      // setting for min-width unless value is null
      if $val[0] {
        $query += ' and (min-width: ' + $val[0] + 'px)';
      }

      // setting for max-width unless value is null
      if $val[1] {
        $query += ' and (max-width: ' + $val[1] + 'px)';
      }

      // generate classes
      @media $query {
        _rs-generate-classes(($prefix $key), $options);
      }
    }
  }
}
